export const TrajectoryAnalysisDescriptions = {
    // TEMPORAL METRICS
    trajectory_length: "Trajectory Length: the total “distance” traveled in latent space by a single video’s latent. We compute this by summing the stepwise Euclidean distances between consecutive latent states: Length = ∑<sub>t</sub> ||x<sub>t+1</sub> – x<sub>t</sub>||. A group’s mean trajectory length (with standard deviation) indicates how far, on average, the latents move from start to finish for that prompt 1 2 . Longer trajectories suggest more significant changes or added detail over the denoising process.",
    velocity_analysis: "Velocity: the speed of movement through latent space per diffusion step. For each video, we calculate velocity at each step as the norm of the step difference v<sub>t</sub> = ||x<sub>t+1</sub> – x<sub>t</sub>||. We then compute the mean velocity (average of these norms over all steps) and the velocity variance (variance of the step sizes over time) 3 4 . Intuitively, mean velocity tells us on average how fast the latent is changing at each step, and velocity variance indicates whether the speed is steady or varies (e.g. perhaps fast changes early and slow later). We often aggregate velocity statistics per prompt group – for example, we report each group’s overall mean of mean- velocities across videos, and similarly an overall mean of velocity variances.", 
    acceleration_analysis: "Acceleration: the change in velocity between steps. We define a step’s acceleration as the norm of the difference between consecutive velocity vectors: a<sub>t</sub> = v<sub>t+1</sub> – v<sub>t</ sub>, and then take its norm ||a<sub>t</sub>||. We compute mean acceleration (average ||a|| over time) and acceleration variance for each video 5 6 . High acceleration means the velocity itself is changing rapidly (the trajectory might be speeding up or slowing down erratically). This could indicate “jolts” in the generative process (possibly corresponding to phase changes, as discussed later).",
    tortuosity: "Tortuosity (Circuitousness): how indirect or meandering the path is. We quantify this as circuitousness = trajectory length / endpoint distance 9 10 . A value of 1.0 would mean the trajectory was a straight line from start to finish. Larger values indicate a winding path. We record the mean tortuousity per group (and sometimes the distribution of this metric across videos) 11 . This is an important metric for understanding how efficiently the model gets to the final image – do latents wander around (high circuitousness) or move straight toward the solution (low circuitousness)?",
    endpoint_distance: "Endpoint Distance: the straight-line distance between the initial and final latent in a trajectory. This is simply ||x_final – x_initial|| for a video 7 8 . It tells us how far the final representation is from where it started (noise). This is always ≤ trajectory length, and the ratio gives the Circuitousness (defined below). The group mean endpoint distance is often smaller than mean trajectory length, since the path is not straight.", 
    semantic_convergence: "",
    // STRUCTURAL ANALYSIS
    spatial_variance: " Spatial Variance Maps: For each diffusion step, we calculate the variance of latent values across the spatial dimensions (height and width, and across frames) for each video 29 . This yields a per-video, per-step spatial variance value (essentially how much the latent features vary across the image canvas at that step). We then average across videos in the prompt group to get a mean spatial variance trajectory for that prompt 30 . Plotting these trajectories shows how the overall spatial detail/contrast evolves over time. For example, a U-shaped curve would mean the latent first loses spatial variance (blurring out noise) and then gains variance as details appear. In our results, we found that spatial variance often drops in early steps (noise is removed, reducing high-frequency variation) and increases in later steps once the model starts adding detailed structure (edges, textures) – consistent with the idea of coarse-to-fine generation.",
    temporal_variance: "Temporal Variance Evolution: Tracks how the variance of latent values changes over diffusion steps across the temporal dimension. This metric shows the evolution of latent representation complexity during the denoising process, revealing patterns of how information is structured and refined step by step.",
    overall_variance: "Overall Variance: The total variance in latent space across all dimensions, providing a measure of the overall complexity and richness of the latent representation for each prompt group.",
    variance_across_videos: "Variance Across Videos: Measures the variance in latent representations across different video seeds/runs for the same prompt, indicating how consistent the model's behavior is for a given prompt type.",
    variance_across_steps: "Variance Across Steps: Quantifies how much the variance changes between different diffusion steps, showing the temporal dynamics of variance evolution during generation.",
    trajectory_pattern: "Spatial Variance Maps: For each diffusion step, we calculate the variance of latent values across the spatial dimensions (height and width, and across frames) for each video. This yields a per-video, per-step spatial variance value (essentially how much the latent features vary across the image canvas at that step). We then average across videos in the prompt group to get a mean spatial variance trajectory for that prompt. Plotting these trajectories shows how the overall spatial detail/contrast evolves over time. For example, a U-shaped curve would mean the latent first loses spatial variance (blurring out noise) and then gains variance as details appear. In our results, we found that spatial variance often drops in early steps (noise is removed, reducing high-frequency variation) and increases in later steps once the model starts adding detailed structure (edges, textures) – consistent with the idea of coarse-to-fine generation.",



    early_vs_late_significance: "Our analysis captures an early vs. late spatial variance ratio: the average spatial variance in the final third of steps divided by that in the first third. A ratio > 1 means more spatial structure in late steps relative to early. We indeed observe much higher late/early ratios for more complex prompts, suggesting that detailed prompts see a surge of spatial detail in the later diffusion period.",
    evolution_ratio: "Evolution Ratio: The ratio of late-stage to early-stage spatial variance, quantifying how much spatial detail recovery occurs in the final phases of diffusion compared to the initial phases. Higher ratios indicate stronger detail recovery in later steps, suggesting more complex generation processes.",
    trajectory_smoothness: "Spatial Progression and Phase Changes: By taking the difference in spatial variance between successive steps, we can see at which point spatial detail starts increasing. We record the mean and std of these stepwise spatial variance changes for each group. We also compute a <b>trajectory smoothness</b> (the mean absolute change in spatial variance per step) and a phase transition strength (the std deviation of the spatial variance trajectory) as indicators of whether there’s a sharp turning point in spatial detail. An abrupt increase in spatial variance at some mid-to-late step might indicate a “phase transition” where the model begins drawing finer details.",
    phase_transition_strength: "Spatial Progression and Phase Changes: By taking the difference in spatial variance between successive steps, we can see at which point spatial detail starts increasing. We record the mean and std of these stepwise spatial variance changes for each group. We also compute a trajectory smoothness (the mean absolute change in spatial variance per step) and a <b>phase transition strength</b> (the std deviation of the spatial variance trajectory) as indicators of whether there’s a sharp turning point in spatial detail. An abrupt increase in spatial variance at some mid-to-late step might indicate a “phase transition” where the model begins drawing finer details.",

    step_deltas_mean: "Spatial Progression and Phase Changes: By taking the difference in spatial variance between successive steps, we can see at which point spatial detail starts increasing. We record the mean and std of these stepwise spatial variance changes for each group. We also compute a trajectory smoothness (the mean absolute change in spatial variance per step) and a phase transition strength (the std deviation of the spatial variance trajectory) as indicators of whether there’s a sharp turning point in spatial detail. An abrupt increase in spatial variance at some mid-to-late step might indicate a “phase transition” where the model begins drawing finer details.",
    step_deltas_std: "Spatial Progression and Phase Changes: By taking the difference in spatial variance between successive steps, we can see at which point spatial detail starts increasing. We record the mean and std of these stepwise spatial variance changes for each group. We also compute a trajectory smoothness (the mean absolute change in spatial variance per step) and a phase transition strength (the std deviation of the spatial variance trajectory) as indicators of whether there’s a sharp turning point in spatial detail. An abrupt increase in spatial variance at some mid-to-late step might indicate a “phase transition” where the model begins drawing finer details.",

    progression_consistency: "Cross-Video Spatial Consistency: We measure how consistent the spatial variance is across different videos (seeds) at a given step by computing the standard deviation of spatial variance across videos at each step. The mean of this across steps (or the trend of this over time) tells us if different runs diverge in when and how much detail they add. If a prompt is very specific, one might expect all runs to behave similarly (low cross-seed variance in their spatial trajectories), whereas a vague prompt might allow very different spatial evolutions per seed. We include metrics like <b>progression consistency</b> (mean cross-video std) and progression variability (std of that std, effectively) for each group",
    progression_variability: "Cross-Video Spatial Consistency: We measure how consistent the spatial variance is across different videos (seeds) at a given step by computing the standard deviation of spatial variance across videos at each step. The mean of this across steps (or the trend of this over time) tells us if different runs diverge in when and how much detail they add. If a prompt is very specific, one might expect all runs to behave similarly (low cross-seed variance in their spatial trajectories), whereas a vague prompt might allow very different spatial evolutions per seed. We include metrics like progression consistency (mean cross-video std) and <b>progression variability</b> (std of that std, effectively) for each group",

    // GEOMETRIC METRICS

    curvature_peak_mean: "Geometry Derivatives (Curvature & Jerk): Building on velocity and acceleration, we computed higher-order derivatives along the trajectory to identify any inflection points in the path. Curvature (in this context) is defined as how much the direction of travel changes relative to the distance traveled – more formally curvature_t = ||Δv_t|| / (||v_t|| + ε) 57 58 . This is essentially the magnitude of the change in velocity normalized by the current speed (so a sharp turn at low speed yields high curvature). Jerk is the norm of the change in acceleration (the third derivative of position). For each trajectory we identify the peak curvature and peak jerk (and at which step they occur), then average those values for the prompt group 59 60 . These metrics are useful for detecting moments of abrupt change: a spike in curvature might indicate the trajectory suddenly veered – possibly aligning with the model deciding on a specific object detail – and a spike in jerk means an abrupt change in acceleration (perhaps the model going from slowing-down to speeding- up as it refines an image). By averaging across videos, we can see if, say, most detailed prompt trajectories tend to have a curvature peak around step 15, whereas simple prompts peak earlier. In our analysis, more specific prompts showed higher peak curvature on average (their paths contain a sharper bend, likely when fine details start appearing), and those peaks occurred later in the diffusion process compared to simple prompts. This aligns with the notion of a late phase transition for complex prompts. We also saw slightly higher jerk for specific prompts, meaning a more sudden change in the rate of latent evolution – potentially the point at which the model’s attention shifts to those last details.",
    jerk_peak_mean: "Geometry Derivatives (Curvature & Jerk): Building on velocity and acceleration, we computed higher-order derivatives along the trajectory to identify any inflection points in the path. Curvature (in this context) is defined as how much the direction of travel changes relative to the distance traveled – more formally curvature_t = ||Δv_t|| / (||v_t|| + ε) 57 58 . This is essentially the magnitude of the change in velocity normalized by the current speed (so a sharp turn at low speed yields high curvature). Jerk is the norm of the change in acceleration (the third derivative of position). For each trajectory we identify the peak curvature and peak jerk (and at which step they occur), then average those values for the prompt group 59 60 . These metrics are useful for detecting moments of abrupt change: a spike in curvature might indicate the trajectory suddenly veered – possibly aligning with the model deciding on a specific object detail – and a spike in jerk means an abrupt change in acceleration (perhaps the model going from slowing-down to speeding- up as it refines an image). By averaging across videos, we can see if, say, most detailed prompt trajectories tend to have a curvature peak around step 15, whereas simple prompts peak earlier. In our analysis, more specific prompts showed higher peak curvature on average (their paths contain a sharper bend, likely when fine details start appearing), and those peaks occurred later in the diffusion process compared to simple prompts. This aligns with the notion of a late phase transition for complex prompts. We also saw slightly higher jerk for specific prompts, meaning a more sudden change in the rate of latent evolution – potentially the point at which the model’s attention shifts to those last details.", 


    // TODO: check/replace these auto-generated descriptions
    speed_stats: "Speed Statistics: quantifies the magnitude of movement through latent space at each step. Speed is calculated as the Euclidean norm of the step difference: speed<sub>t</sub> = ||x<sub>t+1</sub> – x<sub>t</sub>||. The mean speed represents the average rate of change across all diffusion steps for each trajectory, providing insight into how rapidly the latent representation evolves during generation.",
    
    log_volume_stats: "Log Volume Statistics: measures the logarithm of the hypervolume occupied by the trajectory in latent space. This metric captures the geometric 'size' or extent of the path through the high-dimensional latent space. Larger log volumes indicate trajectories that explore more of the latent space, while smaller values suggest more constrained paths.",
    
    effective_side_stats: "Effective Side Statistics: quantifies an effective 'side length' of the trajectory's bounding region in latent space. This geometric measure helps characterize the spatial extent of the trajectory along its principal dimensions, providing insight into how the path spreads across different latent dimensions.",
    
    endpoint_alignment_stats: "Endpoint Alignment: measures how well-aligned the trajectory's overall direction is with the straight-line path from start to end. Values close to 1.0 indicate the trajectory generally moves in the direction of its endpoint, while lower values suggest more deviation from the direct path. This metric complements tortuosity by focusing on directional consistency.",
    
    turning_angle_stats: "Turning Angle Statistics: quantifies the angular changes or 'turns' in the trajectory path. Larger turning angles indicate more dramatic directional changes between steps, while smaller angles suggest smoother, more consistent movement. This metric helps identify whether trajectories follow smooth paths or make sharp directional changes.",
    
    circuitousness_stats: "Circuitousness Statistics: measures how indirect or winding the trajectory path is, calculated as the ratio of trajectory length to endpoint distance. Values close to 1.0 indicate nearly straight paths, while larger values indicate more meandering trajectories. This metric quantifies path efficiency and helps identify different navigation strategies through latent space.",
    
    efficiency_metrics: "Efficiency Metrics: quantifies how efficiently the trajectory moves from its starting point to its endpoint. This includes the mean efficiency score and counts of ballistic (direct) versus meandering trajectories. Higher efficiency indicates more direct paths through latent space, while lower efficiency suggests more exploratory or indirect routes.",
    
    step_variability_stats: "Step Variability Statistics: measures the variability or consistency of step sizes throughout the trajectory. High variability indicates irregular movement with varying step sizes, while low variability suggests more consistent, regular progression. This metric helps identify whether trajectories maintain steady progress or exhibit irregular, episodic movement patterns.",

    // SCATTER PLOT METRICS
    velocity_vs_log_volume: "Velocity vs Log Volume Scatter Plot: shows the relationship between trajectory velocity (mean per trajectory) and log volume for individual trajectories. Each point represents a single trajectory, colored by prompt group. This visualization helps identify correlations between movement speed and spatial extent, revealing whether faster-moving trajectories tend to occupy larger or smaller volumes in latent space.",
    
    velocity_vs_circuitousness: "Velocity vs Circuitousness Scatter Plot: displays the relationship between trajectory velocity and path circuitousness (minus 1.0, where 0 represents a straight line) for individual trajectories. Each point represents a single trajectory, colored by prompt group. This plot reveals whether trajectories with higher velocities tend to follow more direct or more winding paths through latent space.",
}